// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokeAPI.Services;

#nullable disable

namespace PokeAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PokeAPI.Models.Pokemon", b =>
                {
                    b.Property<int>("PokemonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PokemonID"));

                    b.Property<string>("PokemonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type1TypeID")
                        .HasColumnType("int");

                    b.Property<int?>("Type2TypeID")
                        .HasColumnType("int");

                    b.HasKey("PokemonID");

                    b.HasIndex("Type1TypeID");

                    b.HasIndex("Type2TypeID");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("PokeAPI.Models.Type", b =>
                {
                    b.Property<int>("TypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeID"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeID");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("PokeAPI.Models.Pokemon", b =>
                {
                    b.HasOne("PokeAPI.Models.Type", "Type1")
                        .WithMany()
                        .HasForeignKey("Type1TypeID");

                    b.HasOne("PokeAPI.Models.Type", "Type2")
                        .WithMany()
                        .HasForeignKey("Type2TypeID");

                    b.Navigation("Type1");

                    b.Navigation("Type2");
                });
#pragma warning restore 612, 618
        }
    }
}
